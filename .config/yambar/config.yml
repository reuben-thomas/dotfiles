awesome: &awesome Font Awesome 6 Free:style=solid:pixelsize=14
awesome_brands: &awesome_brands Font Awesome 6 Brands:pixelsize=16

std_underline: &std_underline { underline: { size: 2, color: ff0000ff } }

bar:
  height: 26
  location: top
  spacing: 10
  margin: 7

  # Default font
  font: Hack Nerd Font Mono:pixelsize=12

  foreground: ffffffff
  background: 111111cc

  left:
    - i3:
        anchors: # Not used (directly) by f00bar; used here to avoid duplication
          - string:
              &i3_common {
                margin: 5,
                on-click: "swaymsg --quiet workspace {name}",
              }
          - string: &default { <<: *i3_common, text: "{name}" }
          - string: &main { <<: *i3_common, text: , font: *awesome }
          - string: &surfing { <<: *i3_common, text: , font: *awesome_brands }
          - string: &misc { <<: *i3_common, text: , font: *awesome }
          - string: &mail { <<: *i3_common, text: , font: *awesome }
          - string: &music { <<: *i3_common, text: , font: *awesome }
          - focused: &focused
              deco:
                { stack: [background: { color: ffa0a04c }, <<: *std_underline] }
          - invisible: &invisible { foreground: ffffff55 }
          - urgent: &urgent
              foreground: 000000ff
              deco:
                { stack: [background: { color: bc2b3fff }, <<: *std_underline] }
          - map: &i3_mode
              default:
                - string:
                    margin: 5
                    text: "{mode}"
                    deco: { background: { color: cc421dff } }
                - empty: { right-margin: 7 }
              conditions:
                mode == default: { empty: {} }
        content:
          "":
            map:
              conditions:
                state == focused: { string: { <<: [*default, *focused] } }
                state == unfocused: { string: { <<: *default } }
                state == invisible: { string: { <<: [*default, *invisible] } }
                state == urgent: { string: { <<: [*default, *urgent] } }
          main:
            map:
              conditions:
                state == focused: { string: { <<: [*main, *focused] } }
                state == unfocused: { string: { <<: *main } }
                state == invisible: { string: { <<: [*main, *invisible] } }
                state == urgent: { string: { <<: [*main, *urgent] } }
          surfing:
            map:
              conditions:
                state == focused: { string: { <<: [*surfing, *focused] } }
                state == unfocused: { string: { <<: *surfing } }
                state == invisible: { string: { <<: [*surfing, *invisible] } }
                state == urgent: { string: { <<: [*surfing, *urgent] } }
          misc:
            map:
              conditions:
                state == focused: { string: { <<: [*misc, *focused] } }
                state == unfocused: { string: { <<: *misc } }
                state == invisible: { string: { <<: [*misc, *invisible] } }
                state == urgent: { string: { <<: [*misc, *urgent] } }

          mail:
            map:
              conditions:
                state == focused: { string: { <<: [*mail, *focused] } }
                state == unfocused: { string: { <<: *mail } }
                state == invisible: { string: { <<: [*mail, *invisible] } }
                state == urgent: { string: { <<: [*mail, *urgent] } }
          music:
            map:
              conditions:
                state == focused: { string: { <<: [*music, *focused] } }
                state == unfocused: { string: { <<: *music } }
                state == invisible: { string: { <<: [*music, *invisible] } }
                state == urgent: { string: { <<: [*music, *urgent] } }

    - foreign-toplevel:
        content:
          map:
            conditions:
              ~activated: { empty: {} }
              activated:
                - string: { text: "{app-id}", foreground: ffa0a0ff }
                - string: { text: ": {title}", max: 65 }

  center:
    - clock:
        time-format: "%H:%M %p - "
        date-format: "%^a %d.%m.%Y"
        content:
          - string: { text: "{time}" }
          - string: { text: "{date}" }

  right:
    - backlight:
        name: intel_backlight
        content:
          - string: { text: "LUM {percent}%" }
          - string:
              { text: " [-]", on-click: /bin/sh -c "ddcutil setvcp 10 - 10 &" }
          - string:
              { text: " [+]", on-click: /bin/sh -c "ddcutil setvcp 10 + 10 &" }
    - pulse:
        content:
          map:
            conditions:
              ~online: { string: { text: "SPK ERR" } }
              online:
                map:
                  conditions:
                    sink_muted:
                      - string:
                          {
                            text: "SPK MUT",
                            on-click: /bin/sh -c "amixer set Master toggle",
                          }
                      - string:
                          {
                            text: " [{sink_port}]",
                            on-click: /bin/sh -c "/home/$USER/.config/yambar/scripts/toggle-sink.sh",
                          }
                    ~sink_muted:
                      - string:
                          {
                            text: "SPK {sink_percent}%",
                            on-click: /bin/sh -c "amixer set Master toggle",
                          }
                      - string:
                          {
                            text: " [{sink_port}]",
                            on-click: /bin/sh -c "/home/$USER/.config/yambar/scripts/toggle-sink.sh",
                          }
    - pulse:
        content:
          map:
            conditions:
              ~online: { string: { text: "MIC ERR" } }
              online:
                map:
                  on-click: /bin/sh -c "amixer set Capture toggle"
                  conditions:
                    source_muted:
                      - string: { text: "MIC MUT" }
                      # - string: { text: " [{source_port}", max: 10 }
                      # - string: { text: "]" }
                    ~source_muted:
                      - string: { text: "MIC {source_percent}%" }
                      # - string: { text: " [{source_port}", max: 10 }
                      # - string: { text: "]" }
    - network:
        name: enp1s0
        content:
          map:
            conditions:
              ~carrier: { empty: {} }
              carrier:
                map:
                  default:
                    {
                      string: { text: , font: *awesome, foreground: ffffff66 },
                    }
                  conditions:
                    state == up && ipv4 != "":
                      { string: { text: , font: *awesome } }
    - network:
        name: wlp0s20f3
        poll-interval: 5000
        content:
          map:
            default: { string: { text: "NET OK" } }
            conditions:
              state == down: { string: { text: "OFFLINE" } }
              state == up:
                - string: { text: "NET {signal} [{ssid} {state}]" }
    - battery:
        name: BAT0
        poll-interval: 30000
        content:
          map:
            conditions:
              state == unknown:
                - string:
                    {
                      text: "BAT {capacity}% [{estimate}]",
                      on-click: /bin/sh -c "/home/$USER/.config/yambar/scripts/powerprofile.sh",
                    }
              state == discharging:
                - string:
                    {
                      text: "BAT {capacity}% [{estimate}]",
                      on-click: /bin/sh -c "/home/$USER/.config/yambar/scripts/powerprofile.sh",
                    }
              state == "not charging":
                - string:
                    {
                      text: "BAT {capacity}% [EXT {estimate}]",
                      on-click: /bin/sh -c "/home/$USER/.config/yambar/scripts/powerprofile.sh",
                    }
              state == charging:
                - string:
                    {
                      text: "BAT {capacity}% [CHG {estimate}]",
                      on-click: /bin/sh -c "/home/$USER/.config/yambar/scripts/powerprofile.sh",
                    }
    - label:
        content:
          string:
            on-click: shutdown -h now
            text: 
            font: *awesome
